{"version":3,"sources":["components/ContactListItem/ContactListItem.styled.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.jsx","components/Contactlist/ContactList.styled.jsx","components/Contactlist/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Container/Container.styled.jsx","components/Container/Container.jsx","App.js","index.js"],"names":["Button","styled","button","Form","form","Input","input","INITIAL_STATE","name","number","ContactForm","state","formHandler","e","setState","target","value","submitHandler","preventDefault","props","onSubmit","reset","this","type","pattern","title","onChange","required","Component","ContactListItem","id","onClick","List","ul","ListItem","li","ContactList","contacts","onDelete","map","Label","label","Filter","Div","div","Container","children","App","filter","formSubmitHandler","data","contact","shortid","generate","find","contactsEl","alert","prevState","changeFilter","filteredContactsHandler","toLowerCase","includes","deleteContactHandler","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAEaA,EAASC,IAAOC,OAAV,uaCAbC,EAAOF,IAAOG,KAAV,8UAaJC,EAAQJ,IAAOK,MAAV,uE,OCVLC,EAAgB,CACpBC,KAAM,GACNC,OAAQ,IAGJC,E,4MAKJC,M,eAAaJ,G,EAEbK,YAAc,SAAAC,GACZ,EAAKC,SAAL,eACGD,EAAEE,OAAOP,KAAOK,EAAEE,OAAOC,S,EAI9BC,cAAgB,SAAAJ,GACdA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKT,OACzB,EAAKU,S,EAGPA,MAAQ,WACN,EAAKP,SAAL,eAAmBP,K,4CAGrB,WACE,OACE,eAACJ,EAAD,CAAMiB,SAAUE,KAAKL,cAArB,UACE,yCAEE,cAACZ,EAAD,CACEkB,KAAK,OACLf,KAAK,OACLQ,MAAOM,KAAKX,MAAMH,KAClBgB,QAAQ,yHACRC,MAAM,yIACNC,SAAUJ,KAAKV,YACfe,UAAQ,OAGZ,2CAEE,cAACtB,EAAD,CACEkB,KAAK,MACLf,KAAK,SACLQ,MAAOM,KAAKX,MAAMF,OAClBe,QAAQ,yFACRC,MAAM,+FACNC,SAAUJ,KAAKV,YACfe,UAAQ,OAIZ,cAAC3B,EAAD,CAAQuB,KAAK,SAAb,gC,GAnDkBK,aCPpBC,EAAkB,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,GAAItB,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,OAAQsB,EAAc,EAAdA,QAC3C,OACE,qCACGvB,EADH,KACWC,EACT,cAACT,EAAD,CAAQuB,KAAK,SAASQ,QAAS,kBAAMA,EAAQD,IAA7C,wBCLAE,EAAO/B,IAAOgC,GAAV,8PAUJC,EAAWjC,IAAOkC,GAAV,wECRRC,EAAc,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC/B,OACE,cAACN,EAAD,UACGK,EAASE,KAAI,gBAAGT,EAAH,EAAGA,GAAItB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,cAACyB,EAAD,UACE,cAAC,EAAD,CACE1B,KAAMA,EACNC,OAAQA,EACRqB,GAAIA,EACJC,QAASO,KALER,SCNjBU,EAAQvC,IAAOwC,MAAV,8UAaLpC,EAAQJ,IAAOK,MAAV,uECZLoC,EAAS,SAAC,GAAyB,IAAvB1B,EAAsB,EAAtBA,MAAOU,EAAe,EAAfA,SACvB,OACE,eAACc,EAAD,6CAEE,cAAC,EAAD,CAAOjB,KAAK,OAAOf,KAAK,SAASkB,SAAUA,EAAUV,MAAOA,QCLrD2B,EAAM1C,IAAO2C,IAAV,0FCCVC,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OAAO,cAACH,EAAD,UAAMG,KCGTC,E,4MACJpC,MAAQ,CACN0B,SAAU,CACR,CAAEP,GAAI,OAAQtB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEqB,GAAI,OAAQtB,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEqB,GAAI,OAAQtB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEqB,GAAI,OAAQtB,KAAM,iBAAkBC,OAAQ,cAEhDuC,OAAQ,I,EAGVC,kBAAoB,SAAAC,GAClB,IAAMC,EAAU,CACdrB,GAAIsB,IAAQC,WACZ7C,KAAM0C,EAAK1C,KACXC,OAAQyC,EAAKzC,QAIb,EAAKE,MAAM0B,SAASiB,MAAK,SAAAC,GAAU,OAAIA,EAAW/C,OAAS2C,EAAQ3C,QAEnEgD,MAAM,GAAD,OAAIL,EAAQ3C,KAAZ,4BAIP,EAAKM,UAAS,SAAA2C,GAAS,MAAK,CAC1BpB,SAAS,CAAEc,GAAH,mBAAeM,EAAUpB,gB,EAIrCqB,aAAe,SAAA7C,GACb,EAAKC,SAAS,CAAEkC,OAAQnC,EAAEE,OAAOC,S,EAGnC2C,wBAA0B,WACxB,MAA6B,EAAKhD,MAA1B0B,EAAR,EAAQA,SAAUW,EAAlB,EAAkBA,OAClB,OAAOX,EAASW,QACd,SAAAG,GAAO,OACLA,EAAQ3C,KAAKoD,cAAcC,SAASb,EAAOY,gBAC3CT,EAAQ1C,OAAOmD,cAAcC,SAASb,EAAOY,mB,EAInDE,qBAAuB,SAAAhC,GACrB,EAAKhB,SAAS,CACZuB,SAAU,EAAK1B,MAAM0B,SAASW,QAAO,SAAAO,GAAU,OAAIA,EAAWzB,KAAOA,Q,4CAIzE,WACE,MAA6BR,KAAKX,MAA1B0B,EAAR,EAAQA,SAAUW,EAAlB,EAAkBA,OAClB,OACE,eAAC,EAAD,WACE,2CACA,cAAC,EAAD,CAAa5B,SAAUE,KAAK2B,oBAC5B,0CACCZ,EAAS0B,OAAS,EACjB,cAAC,EAAD,CAAQ/C,MAAOgC,EAAQtB,SAAUJ,KAAKoC,eAEtC,yDAEDrB,EAAS0B,OAAS,GACjB,cAAC,EAAD,CACE1B,SAAUf,KAAKqC,0BACfrB,SAAUhB,KAAKwC,8B,GAhETlC,aCFlBoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7dbbe486.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Button = styled.button`\n  border: none;\n  outline: none;\n  border-radius: 50px;\n  padding: 8px 20px;\n  margin-top: 10px;\n  margin-left: auto;\n  background-color: #f44336;\n  color: white;\n  font-weight: 500;\n  &:hover {\n    cursor: pointer;\n    transition: all 0.3s ease 0s;\n    transform: translateY(-2px);\n    box-shadow: 0 12px 16px 0 rgba(0, 0, 0, 0.24),\n      0 17px 50px 0 rgba(0, 0, 0, 0.19);\n  }\n`;\n","import styled from 'styled-components';\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  background-color: #e6d8b4;\n  padding: 10px;\n  width: 100%;\n  border-radius: 4px;\n  box-shadow: 0px 2px 1px rgba(0, 0, 0, 0.2), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 1px 3px rgba(0, 0, 0, 0.12);\n`;\n\nconst Input = styled.input`\n  width: 550px;\n  margin: 10px 0 30px 0;\n`;\n\nexport { Form, Input };\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '../ContactListItem/ContactListItem.styled';\nimport { Form, Input } from './ContactForm.styled';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nclass ContactForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = { ...INITIAL_STATE };\n\n  formHandler = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  submitHandler = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    return (\n      <Form onSubmit={this.submitHandler}>\n        <label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            onChange={this.formHandler}\n            required\n          />\n        </label>\n        <label>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            onChange={this.formHandler}\n            required\n          />\n        </label>\n\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    );\n  }\n}\n\nexport { ContactForm };\n","import PropTypes from 'prop-types';\nimport { Button } from './ContactListItem.styled';\n\nconst ContactListItem = ({ id, name, number, onClick }) => {\n  return (\n    <>\n      {name}: {number}\n      <Button type=\"button\" onClick={() => onClick(id)}>\n        Delete\n      </Button>\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport { ContactListItem };\n","import styled from 'styled-components';\n\nconst List = styled.ul`\n  background-color: #e6d8b4;\n  margin-top: 10px;\n  padding: 10px;\n  width: 100%;\n  border-radius: 4px;\n  box-shadow: 0px 2px 1px rgba(0, 0, 0, 0.2), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 1px 3px rgba(0, 0, 0, 0.12);\n`;\n\nconst ListItem = styled.li`\n  display: flex;\n  align-items: flex-end;\n`;\n\nexport { List, ListItem };\n","import PropTypes from 'prop-types';\nimport { ContactListItem } from '../ContactListItem/ContactListItem';\nimport { List, ListItem } from './ContactList.styled';\n\nconst ContactList = ({ contacts, onDelete }) => {\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => (\n        <ListItem key={id}>\n          <ContactListItem\n            name={name}\n            number={number}\n            id={id}\n            onClick={onDelete}\n          />\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  onDelete: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport { ContactList };\n","import styled from 'styled-components';\n\nconst Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  background-color: #e6d8b4;\n  padding: 10px;\n  width: 100%;\n  border-radius: 4px;\n  box-shadow: 0px 2px 1px rgba(0, 0, 0, 0.2), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 1px 3px rgba(0, 0, 0, 0.12);\n`;\n\nconst Input = styled.input`\n  width: 550px;\n  margin: 10px 0 30px 0;\n`;\n\nexport { Label, Input };\n","import PropTypes from 'prop-types';\nimport { Label, Input } from './Filter.styled';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <Label>\n      Find contacts by name or number\n      <Input type=\"text\" name=\"filter\" onChange={onChange} value={value} />\n    </Label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport { Filter };\n","import styled from 'styled-components';\n\nexport const Div = styled.div`\n  width: 600px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import PropTypes from 'prop-types';\nimport { Div } from './Container.styled';\n\nconst Container = ({ children }) => {\n  return <Div>{children}</Div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport { Container };\n","import shortid from 'shortid';\nimport { Component } from 'react';\nimport { ContactForm } from './components/ContactForm/ContactForm';\nimport { ContactList } from './components/Contactlist/ContactList';\nimport { Filter } from './components/Filter/Filter';\nimport { Container } from './components/Container/Container';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  formSubmitHandler = data => {\n    const contact = {\n      id: shortid.generate(),\n      name: data.name,\n      number: data.number,\n    };\n\n    if (\n      this.state.contacts.find(contactsEl => contactsEl.name === contact.name)\n    ) {\n      alert(`${contact.name} is already in contacts`);\n      return;\n    }\n\n    this.setState(prevState => ({\n      contacts: [contact, ...prevState.contacts],\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  filteredContactsHandler = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(\n      contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n        contact.number.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  deleteContactHandler = id => {\n    this.setState({\n      contacts: this.state.contacts.filter(contactsEl => contactsEl.id !== id),\n    });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n        <h2>Contacts</h2>\n        {contacts.length > 0 ? (\n          <Filter value={filter} onChange={this.changeFilter} />\n        ) : (\n          <p>You have no contacts yet</p>\n        )}\n        {contacts.length > 0 && (\n          <ContactList\n            contacts={this.filteredContactsHandler()}\n            onDelete={this.deleteContactHandler}\n          />\n        )}\n      </Container>\n    );\n  }\n}\n\nexport { App };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}